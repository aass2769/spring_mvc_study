/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-11-19 07:44:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class todolist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#list1 .form-control {\r\n");
      out.write("	border-color: transparent;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#list1 .form-control:focus {\r\n");
      out.write("	border-color: transparent;\r\n");
      out.write("	box-shadow: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#list1 .select-input.form-control[readonly]:not([disabled]) {\r\n");
      out.write("	background-color: #fbfbfb;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".listcontent{\r\n");
      out.write("border: 0px !important;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<section class=\"vh-100\">\r\n");
      out.write("  <div class=\"container py-5 h-100\">\r\n");
      out.write("    <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n");
      out.write("      <div class=\"col\">\r\n");
      out.write("        <div class=\"card\" id=\"list1\" style=\"border-radius: .75rem; background-color: #eff1f2;\">\r\n");
      out.write("          <div class=\"card-body py-4 px-4 px-md-5\">\r\n");
      out.write("\r\n");
      out.write("            <p class=\"h1 text-center mt-3 mb-4 pb-3 text-primary\">\r\n");
      out.write("              <i class=\"fas fa-check-square me-1\"></i>\r\n");
      out.write("              <u>혬 todolist</u>\r\n");
      out.write("            </p>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"pb-2\">\r\n");
      out.write("              <div class=\"card\">\r\n");
      out.write("                <div class=\"card-body\">\r\n");
      out.write("                  <div class=\"d-flex flex-row align-items-center\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control form-control-lg\" id=\"exampleFormControlInput1\"\r\n");
      out.write("                      placeholder=\"Add new...\">\r\n");
      out.write("                    <input type=\"date\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                      <button type=\"button\" class=\"btn btn-primary\">Add</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <hr class=\"my-4\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"d-flex justify-content-between align-items-center mb-4 pt-2 pb-3\">\r\n");
      out.write("            	<div>\r\n");
      out.write("            		<h4>총 ?건</h4>\r\n");
      out.write("            	</div>\r\n");
      out.write("            	<div>\r\n");
      out.write("	              <p class=\"small mb-0 me-2 text-muted\">Filter</p>\r\n");
      out.write("	              <select class=\"select\">\r\n");
      out.write("	                <option value=\"1\">모두</option>\r\n");
      out.write("	                <option value=\"2\">진행중인</option>\r\n");
      out.write("	                <option value=\"3\">완료된</option>\r\n");
      out.write("	              </select>\r\n");
      out.write("	              <button>검색</button>\r\n");
      out.write("              	</div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-lg-12 col-md-8 mx-auto d-flex flex-column justify-content-center align-items-center\">\r\n");
      out.write("		      <div class=\"table small\" style=\"width: 100%;\">\r\n");
      out.write("				<table class=\"table table-striped table-sm\">\r\n");
      out.write("		          <thead>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th class=\"col-1 course_th\" scope=\"col\">구분</th>\r\n");
      out.write("						<th class=\"col-5 course_th\" scope=\"col\">할일</th>\r\n");
      out.write("						<th class=\"col-2 course_th\" scope=\"col\">시작시간</th>\r\n");
      out.write("						<th class=\"col-2 course_th\" scope=\"col\">마감시간</th>\r\n");
      out.write("						<th class=\"col-1 course_th\" scope=\"col\">변경</th>\r\n");
      out.write("						<th class=\"col-1 course_th\" scope=\"col\">삭제</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				 </thead>\r\n");
      out.write("		          <tbody>\r\n");
      out.write("			            <tr>\r\n");
      out.write("			              <td class=\"col-1 center-text listcontent\"><input readonly=\"true\" type=\"text\" value=\"1\"></td>\r\n");
      out.write("			              <td class=\"col-5 center-text listcontent\"><input type=\"text\" value=\"공부\"></td>\r\n");
      out.write("			              <td class=\"col-2 center-text listcontent\"><input type=\"text\" value=\"2023-11-14\"></td>\r\n");
      out.write("			              <td class=\"col-2 center-text listcontent\"><input type=\"text\" value=\"2023-11-20\"></td>\r\n");
      out.write("			              <td class=\"col-1 center-text\">\r\n");
      out.write("			              	<button type=\"button\" class=\"btn btn-sm btn-secondary\" onclick=\"modify()\">변경</button>\r\n");
      out.write("			              </td>\r\n");
      out.write("			              <td class=\"col-1 center-text\">\r\n");
      out.write("			              	<button type=\"button\" class=\"btn btn-sm btn-secondary\">삭제</button>\r\n");
      out.write("			              </td>\r\n");
      out.write("			              <!-- Modal -->\r\n");
      out.write("			            </tr>\r\n");
      out.write("		          </tbody>\r\n");
      out.write("		        </table>\r\n");
      out.write("		      </div>\r\n");
      out.write("	      </div>\r\n");
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("   <div id=\"container\">\r\n");
      out.write("  <p id=\"myParagraph\">이것은 단락입니다.</p>\r\n");
      out.write("  <button id=\"myButton\" type=\"button\" onclick=\"changeButtonType()\">변경</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  function changeToInput() {\r\n");
      out.write("    // <p> 태그 요소 가져오기\r\n");
      out.write("    var paragraph = document.getElementById(\"myParagraph\");\r\n");
      out.write("\r\n");
      out.write("    // 새로운 <input> 태그 생성\r\n");
      out.write("    var inputElement = document.createElement(\"input\");\r\n");
      out.write("\r\n");
      out.write("    // 기존 <p> 태그의 속성 복사\r\n");
      out.write("    inputElement.setAttribute(\"id\", paragraph.id);\r\n");
      out.write("    inputElement.setAttribute(\"value\", paragraph.textContent);\r\n");
      out.write("\r\n");
      out.write("    // <p> 태그를 <input> 태그로 교체\r\n");
      out.write("    paragraph.parentNode.replaceChild(inputElement, paragraph);\r\n");
      out.write("\r\n");
      out.write("    // 취소 버튼 생성\r\n");
      out.write("    var cancelButton = document.createElement(\"button\");\r\n");
      out.write("    cancelButton.textContent = \"취소\";\r\n");
      out.write("    cancelButton.onclick = function() {\r\n");
      out.write("      // 취소 버튼을 누르면 다시 <p> 태그로 변경\r\n");
      out.write("      inputElement.parentNode.replaceChild(paragraph, inputElement);\r\n");
      out.write("      cancelButton.parentNode.removeChild(cancelButton);\r\n");
      out.write("      // 변경된 inputElement의 타입을 'button'으로 설정\r\n");
      out.write("      document.getElementById(\"myButton\").type = 'button';\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    // 취소 버튼을 컨테이너에 추가\r\n");
      out.write("    document.getElementById(\"container\").appendChild(cancelButton);\r\n");
      out.write("\r\n");
      out.write("    // 변경된 inputElement의 타입을 'submit'으로 설정\r\n");
      out.write("    document.getElementById(\"myButton\").type = 'submit';\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function changeButtonType() {\r\n");
      out.write("    changeToInput(); // 버튼의 타입 변경은 changeToInput 함수 내에서 처리\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
